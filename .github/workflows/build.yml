name: Build

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-native-libs:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - android-abi: arm64-v8a
            rust-target: aarch64-linux-android

          - android-abi: armeabi-v7a
            rust-target: armv7-linux-androideabi

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.rust-target }}

      - name: Cache Cargo output
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.rust-target }}
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      - name: Build native libs
        run: |
          unset ANDROID_SDK_ROOT # Deprecated, will cause an error if left set.
          cargo ndk --bindgen --target ${{ matrix.android-abi }} --platform 26 -o jniLibs build --release --features jpegxr 

      - uses: actions/upload-artifact@v4
        with:
          name: native-lib-${{ matrix.android-abi }}
          path: jniLibs

  build-apks:
    needs: build-native-libs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with: # no name set, so all artifacts are downloaded
          path: native-libs

      - name: Copy native libs
        run: |
          mkdir app/src/main/jniLibs
          cp -r native-libs/*/* app/src/main/jniLibs/

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build release APK
        run: ./gradlew assembleRelease

      - uses: actions/upload-artifact@v4
        with:
          name: scdl-release-apks
          path: app/build/outputs/apk/release/*.apk

